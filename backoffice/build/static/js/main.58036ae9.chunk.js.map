{"version":3,"sources":["assets/images/logo-brand.png","serviceWorker.js","components/Login/index.js","containers/Login/index.js","actions/log.js","components/Header/index.js","actions/header.js","containers/Header/index.js","components/Sidebar/index.js","containers/Sidebar/index.js","components/Home/index.js","containers/Home/index.js","components/ProductList/product.js","components/ProductList/categories.js","components/ProductList/index.js","containers/ProductList/index.js","actions/product.js","components/CommandList/command.js","components/CommandList/index.js","containers/CommandList/index.js","actions/command.js","components/ArchiveList/archive.js","components/ArchiveList/index.js","containers/ArchiveList/index.js","components/App/index.js","containers/App/index.js","reducers/login.js","reducers/header.js","reducers/sidebar.js","reducers/product.js","reducers/command.js","reducers/index.js","middlewares/productMiddleware.js","middlewares/commandMiddleware.js","middlewares/logMiddleware.js","middlewares/openCloseMiddleware.js","store/index.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Login","getLogin","errorLog","username","password","setPasswordValue","setUsernameValue","useEffect","document","title","className","onSubmit","e","preventDefault","src","brand","alt","value","onChange","target","type","placeholder","connect","state","login","dispatch","Header","getLogout","getStatus","modifyStatus","editStatus","status","isOpen","onClick","sessionStorage","clear","saveStatus","bool","header","Sidebar","links","map","link","key","id","to","path","activeClassName","exact","icon","name","sidebar","Home","Product","productCurrent","console","log","picture","category","description","price","Checkbox","toggle","class","Categories","categories","products","result","filter","product","ProductList","getProduct","getCategories","ownprops","listProduct","listCategories","Command","getCommand","commands","changeStatus","saveId","command","user","firstname","lastname","email","phoneNumber","orderLines","order","quantity","comment","event","handleArchivate","currentTarget","parentNode","classList","add","CommandList","setTimeout","reload","listCommand","Archive","ArchiveList","App","isLogged","checkIsLogged","component","process","initialState","action","undefined","token","idCommand","combineReducers","productMiddleware","store","next","axios","get","then","response","data","catch","error","commandMiddleware","getState","put","logMiddleware","post","setItem","openCloseMiddleware","enhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","createStore","rootReducer","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.58036ae9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-brand.f8d6ce72.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","//! == Import : npm ==\nimport React, { useEffect } from 'react';\n\n//! == Import : local ==\nimport brand from '../../assets/images/logo-brand.png';\nimport './styles.scss';\n\n//! == Composant ==\nconst Login = ({ getLogin, errorLog, username, password, setPasswordValue, setUsernameValue }) => {\n    useEffect (() => { document.title = \"Messieurs Croquent || Back Office - Connexion\" }, []);\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        getLogin();\n    };\n\n    const hangleUsernameOnChange = (e) => {\n        setUsernameValue(e.target.value);\n    }\n    const handlePasswordOnChange = (e) => {\n        setPasswordValue(e.target.value);\n    }\n    return (\n        <div className=\"login\">\n            <form className=\"login__form\" onSubmit={handleSubmit}>\n                <img src={brand} alt=\"brand\" className=\"login__brand\"/>\n                <input \n                    value={username}\n                    onChange={hangleUsernameOnChange} \n                    type=\"text\" \n                    className=\"login__email\" \n                    placeholder=\"Utilisateur\"\n                />\n                <input \n                    value={password}\n                    onChange={handlePasswordOnChange} \n                    type=\"password\" \n                    className=\"login__password\" \n                    placeholder=\"Mot de passe\"\n                />\n                <p className={errorLog ? \"login__error\" : \"login__error--none\"}>Votre nom d'utilisateur ou votre mot de passe est incorrect</p>\n                <button type=\"submit\" className=\"login__submit\" >Se connecter</button>\n            </form>\n        </div>\n    );\n};\n\n//! == Export ==\nexport default Login;\n","//! == Import : npm\nimport { connect } from 'react-redux';\n\n//! == Import : local (actions)\nimport Login from '../../components/Login';\nimport { getLogin, setUsernameValue, setPasswordValue } from '../../actions/log';\n\nconst mapStateToProps = (state) => ({\n    username: state.login.username,\n    password: state.login.password,\n    errorLog: state.login.errorLog,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getLogin: () => dispatch(getLogin()),\n    setUsernameValue: (username) => dispatch (setUsernameValue(username)),\n    setPasswordValue: (password) => dispatch (setPasswordValue(password)),\n    \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","// ACTION TYPE\nexport const GET_LOGIN = 'GET_LOGIN';\nexport const CHECK_IS_LOGGED = 'CHECK_IS_LOGGED';\nexport const ERROR_LOGGED = 'ERROR_LOGGED';\nexport const GET_LOGOUT = 'GET_LOGOUT';\nexport const SET_USERNAME_VALUE = 'SET_USERNAME_VALUE';\nexport const SET_PASSWORD_VALUE = 'SET_PASSWORD_VALUE';\n\n// ACTION CREATOR\nexport const getLogin = () => ({\n  type: GET_LOGIN,\n});\n\nexport const checkIsLogged = () => ({\n  type: CHECK_IS_LOGGED,\n});\n\nexport const errorLogged = () => ({\n  type: ERROR_LOGGED,\n});\n\nexport const getLogout = () => ({\n  type: GET_LOGOUT,\n});\n\nexport const setUsernameValue = (username) => ({\n  type: SET_USERNAME_VALUE,\n  username,\n});\n\nexport const setPasswordValue = (password) => ({\n  type: SET_PASSWORD_VALUE,\n  password\n});\n","//! == Import : npm ==\nimport React, { useEffect } from 'react';\n\n//! == Import : local ==\nimport './styles.scss';\n\n//! == Composant ==\nconst Header = ({ getLogout, getStatus, modifyStatus, editStatus, status, isOpen }) => {\n   useEffect(() => { getStatus(); });\n   const handleLogout = () => {\n      getLogout();\n      window.sessionStorage.clear();\n   };\n   const handleEditStatus = () => {\n      if (status === 'FERMÉ') {\n         modifyStatus('OUVERT', true);\n      } else if (status === 'OUVERT') {\n         modifyStatus('FERMÉ', false);\n      }\n      editStatus();\n   }\n   return (\n      <header className=\"header\">\n         <h1 className=\"header__title\">\n            MESSIEURS CROQUENT - BackOffice\n         </h1>\n         <button className={isOpen ? \"header__open\" : \"header__close\"} onClick={handleEditStatus}>\n            <i className=\"fa fa-clock\"></i>\n            {isOpen ? \"OUVERT\" : \"FERMÉ\"}\n         </button>\n         <button className=\"header__logout\" onClick={handleLogout}>\n               <i className=\"fas fa-power-off\"></i>\n               Déconnexion\n         </button>\n      </header>\n   );\n};\n\n//! == Export ==\nexport default Header;","// ACTION TYPE\nexport const GET_LOGOUT = 'GET_LOGOUT';\nexport const EDIT_STATUS = 'EDIT_STATUS';\nexport const GET_STATUS = 'GET_STATUS';\nexport const SAVE_STATUS = 'SAVE_STATUS';\nexport const MODIFY_STATUS = 'MODIFY_STATUS';\n\n// ACTION CREATOR\nexport const getLogout = () => ({\n  type: GET_LOGOUT,\n});\n\nexport const editStatus = () => ({\n    type: EDIT_STATUS,\n  });\n\n  export const getStatus = () => ({\n    type: GET_STATUS,\n  });\n\n  export const saveStatus = (status, bool) => ({\n    type: SAVE_STATUS,\n    status,\n    bool,\n  });\n\n  export const modifyStatus = (status, bool) => ({\n    type: MODIFY_STATUS,\n    status,\n    bool,\n  });","//! == Import : npm\nimport { connect } from 'react-redux';\n\n//! == Import : local (actions)\nimport Header from '../../components/Header';\nimport { getLogout, getStatus, editStatus, modifyStatus } from '../../actions/header';\n\nconst mapStateToProps = (state) => ({\n    isOpen: state.header.isOpen,\n    status: state.header.status,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getLogout: () => dispatch(getLogout()),\n    getStatus: () => dispatch(getStatus()),\n    editStatus: () => dispatch(editStatus()),\n    modifyStatus: (status, bool) => dispatch(modifyStatus(status, bool)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","//! == Import : npm ==\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { bubble as Menu } from 'react-burger-menu';\n\n//! == Import : local ==\nimport './styles.scss';\n\n//! == Composant ==\nconst Sidebar = ({ links }) => (\n    <Menu>\n        {links.map((link) => (\n            <NavLink\n                key={link.id}\n                to={link.path}\n                activeClassName=\"bm-item-selected\"\n                exact\n            >\n                    <i className={link.icon}></i>\n                    <span className=\"bm-item-link\">{link.name}</span>\n            </NavLink>\n        ))}\n    </Menu>\n);\n\n//! == Export ==\nexport default Sidebar;\n","//! == Import : npm\nimport { connect } from 'react-redux';\n\n//! == Import : local (actions)\nimport Sidebar from '../../components/Sidebar';\n\nconst mapStateToProps = (state) => ({\n    links: state.sidebar.links,\n});\n\nconst mapDispatchToProps = (dispatch) => {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);","import React, { useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './styles.scss';\n\nconst Home = ({ links }) => { \n    useEffect (() => { document.title = \"Messieurs Croquent || Back Office - Accueil\" }, []);\n    return(\n        <div className='home'>\n            <div className='home__container'>\n                <h1 className='home__title'>Bienvenue sur votre outil de gestion de commande.</h1>\n                <p className='home__text'>Pour consulter les produits ou les commandes en cours du restaurant, cliquer sur un des boutons ci-dessous ou dans le menu déroulant situé sur la gauche</p>\n                <div className=\"home__link\" >\n                    <NavLink to={links[1].path} exact >\n                        <button className=\"home__button\">\n                            <i className={links[1].icon}></i>\n                            <span className=\"bm-item-link\">{links[1].name}</span>\n                        </button>\n                    </NavLink>\n                    <NavLink to={links[2].path} exact >\n                        <button className=\"home__button\">\n                            <i className={links[2].icon}></i>\n                            <span className=\"bm-item-link\">{links[2].name}</span>\n                        </button>\n                    </NavLink>\n                    <NavLink to={links[3].path} exact >\n                        <button className=\"home__button\">\n                            <i className={links[3].icon}></i>\n                            <span className=\"bm-item-link\">{links[3].name}</span>\n                        </button>\n                    </NavLink>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n","//! == Import : npm\nimport { connect } from 'react-redux';\n\n//! == Import : local (actions)\nimport Sidebar from '../../components/Home';\n\nconst mapStateToProps = (state) => ({\n    links: state.sidebar.links,\n});\n\nconst mapDispatchToProps = (dispatch) => {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);","//! == Import : npm ==\nimport React from 'react';\nimport { Checkbox } from 'semantic-ui-react';\n\n//! == Import : local ==\nimport './styles.scss';\n\n//! == Composant ==\nconst Product = ({ productCurrent }) => {\n    console.log(productCurrent)\n    return (\n        <tr className=\"product__tr\">\n            <td className=\"product__image--td\">\n                <img className=\"product__image\" src={productCurrent.picture} alt=\"croque\"></img>\n            </td>\n            <td className=\"product__dish--td\">\n                <p className=\"product__dish\">{productCurrent.name}</p>\n            </td>\n            <td className=\"product__category--td\">\n                <p className=\"product__category\">{productCurrent.category.name}</p>\n            </td>\n            <td className=\"product__description--td\">\n                <p className=\"product__description\">{productCurrent.description}</p>\n            </td>\n            <td className=\"product__price--td\">\n                <p className=\"product__price\">{productCurrent.price}€</p>\n            </td>\n            <td className=\"product__satus--td\">\n                <Checkbox onClick={() => (console.log('coucou'))} toggle className=\"product__status\"/>\n            </td>\n            <td className=\"product__delete--td\">\n                <button className=\"product__delete\">\n                    <i class=\"fas fa-trash-alt\"></i>\n                </button>\n            </td>\n        </tr>\n    );\n};\n\n//! == Export ==\nexport default Product;\n","//! == Import : npm ==\nimport React from 'react';\n\n//! == Import : local ==\nimport Product from './product';\nimport './styles.scss';\n\n//! == Composant ==\nconst Categories = ({ categories, products }) => {\n    return (\n        <div className=\"product__container\">\n            {categories.map((category) => {\n                const result = products.filter(product => product.category.id === category.id);\n                return (\n                    <div className=\"product__byCategory\" key={category.id}>\n                        <p className=\"product__titleCategory\">{category.name}</p>\n                        <table>\n                            <thead>\n                                <tr className=\"product__tr\">\n                                    <td className=\"product__image--td\">\n                                        <p className=\"product__image--th\">Image</p>\n                                    </td>\n                                    <td className=\"product__dish--td\">\n                                        <p className=\"product__dish--th\">Produit</p>\n                                    </td>\n                                    <td className=\"product__category--td\">\n                                        <p className=\"product__category--th\">Catégorie</p>\n                                    </td>\n                                    <td className=\"product__description--td\">\n                                        <p className=\"product__description--th\">Description</p>\n                                    </td>\n                                    <td className=\"product__price--td\">\n                                        <p className=\"product__price--th\">Prix</p>\n                                    </td>\n                                    <td className=\"product__status--td\">\n                                        <p className=\"product__status--th\">Statut</p>\n                                    </td>\n                                    <td className=\"product__delete--td\">\n                                        <p className=\"product__delete--th\">Supprimer</p>\n                                    </td>\n                                </tr>\n                            </thead>\n                            {result.map((productCurrent) => (\n                                <tbody key={productCurrent.id}>\n                                    <Product productCurrent={productCurrent} />\n                                </tbody>\n                            ))}\n                        </table> \n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\n//! == Export ==\nexport default Categories;\n","//! == Import : npm ==\nimport React, { useEffect } from 'react';\n\n//! == Import : local ==\nimport Categories from './categories';\nimport './styles.scss';\n\n//! == Composant ==\nconst ProductList = ({ products, getProduct, categories, getCategories }) => {\n    useEffect(() => { \n        getProduct();\n        getCategories();\n        document.title = \"Messieurs Croquent || Back Office - Produits\";\n     }, []);\n    return (\n        <main className=\"product\">\n            <h1 className=\"product__title\">Modifier ou supprimer des produits</h1>\n            <Categories \n                categories={categories}\n                products={products}\n            />\n        </main>\n    );\n};\n\n//! == Export ==\nexport default ProductList;\n","//! == Import : npm\nimport { connect } from 'react-redux';\n\n//! == Import : local (actions)\nimport ProductList from '../../components/ProductList';\nimport { getProduct, getCategories } from '../../actions/product';\n\n\nconst mapStateToProps = (state, ownprops) => ({\n    products: state.product.listProduct,\n    categories: state.product.listCategories,\n});\n\nconst mapDispatchToProps = (dispatch, ownprops) => ({\n    getProduct: () => dispatch(getProduct()),\n    getCategories: () => dispatch(getCategories()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);","// ACTION TYPE\nexport const GET_PRODUCT = 'GET_PRODUCT';\nexport const SAVE_PRODUCT = 'SAVE_PRODUCT';\nexport const GET_CATEGORIES = 'GET_CATEGORIES';\nexport const SAVE_CATEGORIES = 'SAVE_CATEGORIES';\n\n// ACTION CREATOR\nexport const getProduct = () => ({\n    type: GET_PRODUCT,\n  });\n\n  export const saveProduct = (product) => ({\n    type: SAVE_PRODUCT,\n    product\n  });\n\n  export const getCategories = () => ({\n    type: GET_CATEGORIES,\n  });\n\n  export const saveCategories = (categories) => ({\n    type: SAVE_CATEGORIES,\n    categories\n  });","//! == Import : npm ==\nimport React, { useEffect } from 'react';\n\n//! == Import : local ==\nimport './styles.scss';\n\n//! == Composant ==\nconst Command = ({ getCommand, commands, changeStatus, saveId }) => {\n    useEffect(() => { getCommand(); }, []);\n    const handleArchivate = (command) => {\n        saveId(command.id);\n        changeStatus();\n    }\n    const handleChangeClass = (evt) => {\n        evt.currentTarget.parentNode.classList.add('command__container--none');\n    }\n    return (\n        <div className=\"command\">\n            {commands.map((command) => {\n                if (command.status === 1) {\n                    return (\n                        <div className=\"command__container\">\n                            <p className=\"command__number\">Commande n°{command.id}</p>\n                            <p className=\"command__infosUser\">Informations du client :</p>\n                            <div className=\"command__user\">\n                                <p className=\"command__infos\">Prénom: {command.user.firstname}</p>\n                                <p className=\"command__infos\">Nom: {command.user.lastname}</p>\n                                <p className=\"command__infos\">Email: {command.user.email}</p>\n                                <p className=\"command__infos\">Téléphone: 0{command.user.phoneNumber}</p>\n                            </div>\n                            <p className=\"command__infosCommand\">Détail de la commande :</p>\n                            {command.orderLines.map((order) => (\n                                <p className=\"command__detail\">{order.quantity} {order.product.name}</p>\n                            ))}\n                            <p className=\"command__infosComment\">Commentaire :</p>\n                            <p className=\"command__comment\">{command.comment}</p>\n                            <p className=\"command__infosPrice\">Prix total de la commande :</p>\n                            <p className=\"command__price\">{command.price} &euro;</p>\n                            <button \n                                className=\"command__archivate\"\n                                onClick={(event) => {(handleArchivate(command)); handleChangeClass(event);}}\n                            >\n                                <i className=\"fas fa-archive\"></i>\n                                Archiver\n                            </button>\n                        </div>\n                    )\n                };\n            })}\n        </div>\n    );\n};\n\n//! == Export ==\nexport default Command;\n","//! == Import : npm ==\nimport React, { useEffect } from 'react';\n\n//! == Import : local ==\nimport Command from './command';\nimport './styles.scss';\n\n//! == Composant ==\nconst CommandList = ({ getCommand, commands, changeStatus, saveId }) => {\n    useEffect (() => { document.title = \"Messieurs Croquent || Back Office - Commandes\" }, []);\n    setTimeout(() => {window.location.reload()}, 60000); // reload all 60s\n    return (\n        <main className=\"commandList\">\n            <h1 className=\"commandList__command\">Les commandes en cours</h1>\n            <Command\n                getCommand={getCommand}\n                commands={commands}\n                changeStatus={changeStatus}\n                saveId={saveId}\n            />\n        </main>\n    );\n};\n\n//! == Export ==\nexport default CommandList;\n","//! == Import : npm\nimport { connect } from 'react-redux';\n\n//! == Import : local (actions)\nimport CommandList from '../../components/CommandList';\nimport { getCommand, changeStatus, saveId } from '../../actions/command';\n\n\nconst mapStateToProps = (state, ownprops) => ({\n    commands: state.command.listCommand,\n});\n\nconst mapDispatchToProps = (dispatch, ownprops) => ({\n    getCommand: () => dispatch(getCommand()),\n    changeStatus: () => dispatch(changeStatus()),\n    saveId: (id) => dispatch(saveId(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommandList);","// ACTION TYPE\nexport const GET_COMMAND = 'GET_COMMAND';\nexport const SAVE_COMMAND = 'SAVE_COMMAND';\nexport const CHANGE_STATUS = 'CHANGE_STATUS';\nexport const SAVE_ID = 'SAVE_ID';\n\n// ACTION CREATOR\nexport const getCommand = () => ({\n    type: GET_COMMAND,\n  });\n\n  export const saveCommand = (command) => ({\n    type: SAVE_COMMAND,\n    command\n  });\n\n  export const changeStatus = () => ({ \n    type: CHANGE_STATUS,\n  });\n\n  export const saveId = (id) => ({\n    type: SAVE_ID,\n    id\n  })","//! == Import : npm ==\nimport React, { useEffect } from 'react';\n\n//! == Import : local ==\nimport './styles.scss';\n\n//! == Composant ==\nconst Archive = ({ getCommand, commands }) => {\n    useEffect(() => { getCommand(); }, []);\n    return (\n        <div className=\"archive\">\n            {commands.map((command) => {\n                if (command.status === 2) {\n                    return (\n                        <div className=\"archive__container\">\n                            <p className=\"archive__number\">Commande n°{command.id}</p>\n                            <p className=\"archive__infosUser\">Informations du client :</p>\n                            <div className=\"archive__user\">\n                                <p className=\"archive__infos\">Prénom: {command.user.firstname}</p>\n                                <p className=\"archive__infos\">Nom: {command.user.lastname}</p>\n                                <p className=\"archive__infos\">Email: {command.user.email}</p>\n                                <p className=\"archive__infos\">Téléphone: 0{command.user.phoneNumber}</p>\n                            </div>\n                            <p className=\"archive__infosCommand\">Détail de la commande :</p>\n                            {command.orderLines.map((order) => (\n                                <p className=\"archive__detail\">{order.quantity} {order.product.name}</p>\n                            ))}\n                            <p className=\"archive__infosComment\">Commentaire :</p>\n                            <p className=\"archive__comment\">{command.comment}</p>\n                            <p className=\"archive__infosPrice\">Prix total de la commande :</p>\n                            <p className=\"archive__price\">{command.price} &euro;</p>\n                        </div>\n                    )\n                };\n            })}\n        </div>\n    );\n};\n\n//! == Export ==\nexport default Archive;","//! == Import : npm ==\nimport React, { useEffect } from 'react';\n\n//! == Import : local ==\nimport Archive from './archive';\nimport './styles.scss';\n\n//! == Composant ==\nconst ArchiveList = ({ getCommand, commands}) => {\n    useEffect (() => { document.title = \"Messieurs Croquent || Back Office - Archives\" }, []);\n    return (\n        <main className=\"archiveList\">\n            <h1 className=\"archiveList__command\">Les commandes archivées</h1>\n            <Archive\n                getCommand={getCommand}\n                commands={commands}\n            />\n        </main>\n    );\n};\n\n//! == Export ==\nexport default ArchiveList;","//! == Import : npm\nimport { connect } from 'react-redux';\n\n//! == Import : local (actions)\nimport ArchiveList from '../../components/ArchiveList';\nimport { getCommand } from '../../actions/command';\n\n\nconst mapStateToProps = (state, ownprops) => ({\n    commands: state.command.listCommand,\n});\n\nconst mapDispatchToProps = (dispatch, ownprops) => ({\n    getCommand: () => dispatch(getCommand()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArchiveList);","//! == Import : npm ==\nimport React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n//! == Import : local ==\nimport './styles.scss';\nimport Login from '../../containers/Login';\nimport Header from '../../containers/Header';\nimport Sidebar from '../../containers/Sidebar';\nimport Home from '../../containers/Home'\nimport ProductList from '../../containers/ProductList';\nimport CommandList from '../../containers/CommandList';\nimport ArchiveList from '../../containers/ArchiveList';\n\n//! == Composant ==\nconst App = ({ isLogged, checkIsLogged }) => {\n  useEffect(() => { checkIsLogged() }, []);\n  return (\n    <div className=\"App\">\n      {!isLogged && (\n        <Login />\n      )}\n      {isLogged && (\n        <>\n          <Header />\n          <Sidebar />\n          <Switch />\n             <Route exact path=\"/backoffice\" component={Home} />\n             <Route exact path={`${process.env.PUBLIC_URL}/produits`} component={ProductList} />\n             <Route exact path={`${process.env.PUBLIC_URL}/commandes`} component={CommandList} />\n             <Route exact path={`${process.env.PUBLIC_URL}/archives`} component={ArchiveList} />\n          <Switch />\n        </>\n      )}\n    </div>\n  );\n};\n\n//! == Export ==\nexport default App;\n","//! == Import : npm\nimport { connect } from 'react-redux';\n\n//! == Import : local (actions)\nimport App from '../../components/App';\nimport { checkIsLogged } from '../../actions/log';\n\nconst mapStateToProps = (state) => ({\n    isLogged: state.login.isLogged,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    checkIsLogged: () => dispatch(checkIsLogged()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","//! == Import : local (actions)\nimport { GET_LOGIN, CHECK_IS_LOGGED, ERROR_LOGGED, SET_USERNAME_VALUE, SET_PASSWORD_VALUE } from '../actions/log';\nimport { GET_LOGOUT } from '../actions/header';\n\n//! == Initial state\nexport const initialState = {\n    errorLog: false,\n    isLogged: false,\n    username: '',\n    password: ''\n};\n\n//! == Actions to modified state\nconst login = (state = initialState, action = {}) => {\n    switch (action.type) {\n        case GET_LOGIN:\n           return {\n                ...state,\n            };\n        case CHECK_IS_LOGGED:\n            if (window.sessionStorage.token !== undefined) {\n                return {\n                    ...state,\n                    isLogged: true,\n                };\n            } return {\n                ...state\n            };\n        case ERROR_LOGGED:\n            return {\n                ...state,\n                errorLog: true\n            }\n        case GET_LOGOUT:\n            return {\n                ...state,\n                isLogged: false,\n            }\n        case SET_USERNAME_VALUE:\n            return {\n                ...state,\n                username: action.username\n            }\n        case SET_PASSWORD_VALUE:\n            return {\n                ...state,\n                password: action.password\n            }\n        default:\n           return state;\n     }\n};\n\nexport default login;","//! == Import : local (actions)\nimport { MODIFY_STATUS, SAVE_STATUS } from '../actions/header';\n\n//! == Initial state\nexport const initialState = {\n    isOpen: '',\n    status: '',\n};\n\n//! == Actions to modified state\nconst header = (state = initialState, action = {}) => {\n    switch (action.type) {\n        case MODIFY_STATUS:\n            return {\n                ...state,\n                status: action.status,\n                isOpen: action.bool\n            }\n        case SAVE_STATUS:\n            return {\n                ...state,\n                status: action.status,\n                isOpen: action.bool,\n            }\n        default:\n           return state;\n     }\n};\n\nexport default header;","//! == Import : local (actions)\n\n//! == Initial state\nexport const initialState = {\n    links: [\n        {\n           id: 1,\n           name: 'Accueil',\n           path: '/backoffice',\n           icon: 'fas fa-home',\n        },\n        {\n            id: 2,\n            name: 'Produits',\n            path: `${process.env.PUBLIC_URL}/produits`,\n            icon:'fas fa-box'\n         },\n         {\n            id: 3,\n            name: 'Commandes',\n            path: `${process.env.PUBLIC_URL}/commandes`,\n            icon:'fas fa-shopping-cart',\n         },\n         {\n            id: 4,\n            name: 'Archives',\n            path: `${process.env.PUBLIC_URL}/archives`,\n            icon: 'fas fa-archive',\n         },\n    ],\n};\n\n//! == Actions to modified state\nconst sidebar = (state = initialState, action = {}) => {\n    return state;\n};\n\nexport default sidebar;","//! == Import : local (actions)\nimport { SAVE_PRODUCT, SAVE_CATEGORIES } from '../actions/product';\n\n//! == Initial state\nexport const initialState = {\n    listProduct: [],\n    listCategories: [],\n}\n\n//! == Actions to modified state\nconst product = (state = initialState, action = {}) => {\n    switch (action.type) {\n        case SAVE_PRODUCT:\n        return {\n            ...state,\n            listProduct: action.product,\n        };\n        case SAVE_CATEGORIES:\n        return {\n            ...state,\n            listCategories: action.categories,\n        };\n        default:\n            return state;\n    }\n    \n};\n\nexport default product;","//! == Import : local (actions)\nimport { SAVE_COMMAND, CHANGE_STATUS, SAVE_ID } from '../actions/command';\n\n//! == Initial state\nexport const initialState = {\n    listCommand: [],\n    idCommand: null,\n}\n\n//! == Actions to modified state\nconst product = (state = initialState, action = {}) => {\n    switch (action.type) {\n        case SAVE_COMMAND:\n        return {\n            ...state,\n            listCommand: action.command,\n        };\n        case SAVE_ID:\n            return {\n                ...state,\n                idCommand: action.id,\n            }\n        default:\n            return state;\n    }\n    \n};\n\nexport default product;","//! == Import : npm\nimport { combineReducers } from 'redux';\n\n//! == Import : local\nimport login from './login';\nimport header from './header';\nimport sidebar from './sidebar';\nimport product from './product';\nimport command from './command';\n\nexport default combineReducers({\n  login,\n  header,\n  sidebar,\n  product,\n  command,\n});","//! == Import : npm\nimport axios from 'axios';\n\n//! == Import : local (actions)\nimport { GET_PRODUCT, saveProduct, GET_CATEGORIES, saveCategories } from '../actions/product';\n\n//! == Utils Axios for recupered JSON via API\nconst productMiddleware = (store) => (next) => (action) => {\n  switch (action.type) {\n    case GET_PRODUCT:\n      axios.get(`${process.env.REACT_APP_BASE_URL}products`)\n        .then((response) => {\n          store.dispatch(saveProduct(response.data));\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      break;\n    case GET_CATEGORIES:\n      axios.get(`${process.env.REACT_APP_BASE_URL}categories`)\n        .then((response) => {\n          store.dispatch(saveCategories(response.data));\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      break;\n    default:\n      next(action);\n      break;\n  }\n};\n\nexport default productMiddleware;","//! == Import : npm\nimport axios from 'axios';\n\n//! == Import : local (actions)\nimport { GET_COMMAND, CHANGE_STATUS, saveCommand, changeStatus } from '../actions/command';\n\n//! == Utils Axios for recupered JSON via API\nconst commandMiddleware = (store) => (next) => (action) => {\n  switch (action.type) {\n    case GET_COMMAND:\n      axios.get(`${process.env.REACT_APP_BASE_URL}order`)\n        .then((response) => {\n          store.dispatch(saveCommand(response.data));\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      break;\n      case CHANGE_STATUS:\n        const state = store.getState();\n        const { idCommand } = state.command;\n        axios.put(`${process.env.REACT_APP_BASE_URL}order/${idCommand}`, {\n          status: 2,\n        })\n          .then((response) => {\n            console.log(response, \"response\");\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n        break;\n    default:\n      next(action);\n      break;\n  }\n};\n\nexport default commandMiddleware;","//! == Import : npm\nimport axios from 'axios';\n\n//! == Import : local (actions)\nimport { GET_LOGIN, checkIsLogged, errorLogged } from '../actions/log';\n//! == Utils Axios for recupered JSON via API\n\nconst logMiddleware = (store) => (next) => (action) => {\n    switch (action.type) {\n        case GET_LOGIN: {\n            const state = store.getState();\n            const { username, password } = state.login;\n\n            axios.post(`${process.env.REACT_APP_BASE_URL}login`, {\n                username,\n                password\n            })\n            .then((response) => {\n                console.log(response.data.token);\n                const { token } = response.data;\n                window.sessionStorage.setItem('token', token)\n                store.dispatch(checkIsLogged());\n            })\n            .catch((error) => {\n                store.dispatch(errorLogged());\n                console.log(error);\n            })\n            break;\n        }\n    default:\n        next(action)\n        break;\n    }\n}\n\nexport default logMiddleware;","//! == Import : npm\nimport axios from 'axios';\n\n//! == Import : local (actions)\nimport { EDIT_STATUS, GET_STATUS, saveStatus } from '../actions/header';\n//! == Utils Axios for recupered JSON via API\n\nconst openCloseMiddleware = (store) => (next) => (action) => {\n    switch (action.type) {\n        case EDIT_STATUS: {\n            const state = store.getState();\n            const { status } = state.header;\n            axios.put(`${process.env.REACT_APP_BASE_URL}store/1`, {\n                status\n            })\n            .then((response) => {\n                console.log(response);\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n            break;\n        }\n        case GET_STATUS: {\n            axios.get(`${process.env.REACT_APP_BASE_URL}store/1`)\n            .then((response) => {\n                if (response.data.status === 'OUVERT') {\n                    store.dispatch(saveStatus(response.data.status, true));\n                } else if (response.data.status === 'FERMÉ') {\n                    store.dispatch(saveStatus(response.data.status, false));\n                };\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n            break;\n        }\n    default:\n        next(action)\n        break;\n    }\n}\n\nexport default openCloseMiddleware;","//! == Import : npm\nimport { createStore, compose, applyMiddleware } from 'redux';\n\n//! == Import : local\nimport rootReducer from '../reducers';\nimport productMiddleware from '../middlewares/productMiddleware';\nimport commandMiddleware from '../middlewares/commandMiddleware';\nimport logMiddleware from '../middlewares/logMiddleware';\nimport openCloseMiddleware from '../middlewares/openCloseMiddleware';\n\n//! == Enhancers\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancers = composeEnhancers(\n  applyMiddleware(\n    productMiddleware,\n    commandMiddleware,\n    logMiddleware,\n    openCloseMiddleware,\n  ),\n);\n\n//! == Store\nconst store = createStore(\n  rootReducer,\n  //? preloadedState,\n  enhancers,\n);\n\n//! == Export\nexport default store;","//! == Import : npm ==\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\n//! == Import : local ==\nimport './styles/index.scss';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './containers/App';\nimport store from './store';\n\n//! == Composant ==\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}